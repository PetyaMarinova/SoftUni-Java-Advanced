package po02Selling;

import java.util.Scanner;

public class Main {
    public static int startRow = 0;
    public static int startCol = 0;
    public static int collectedMoney = 0;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = Integer.parseInt(scanner.nextLine());

        char[][] matrix = new char[n][n];
        for (int row = 0; row < n; row++) {
            String line = scanner.nextLine();
            if (line.contains("S")) {
                startRow = row;
                startCol = line.indexOf("S");
            }
            matrix[row] = line.toCharArray();
        }

        while (collectedMoney < 50) {
            String command = scanner.nextLine();

            if (command.equals("up")) {
                //row--
                if (!isOutOfBounds(startRow - 1, startCol, matrix)) {
                    movePerson(matrix, startRow, startCol, startRow - 1, startCol);
                } else {
                    break;
                }
            } else if (command.equals("down")) {
                //row++
                if (!isOutOfBounds(startRow + 1, startCol, matrix)) {
                    movePerson(matrix, startRow, startCol, startRow + 1, startCol);
                } else {
                    break;
                }
            } else if (command.equals("left")) {
                //col--
                if (!isOutOfBounds(startRow, startCol - 1, matrix)) {
                    movePerson(matrix, startRow, startCol, startRow, startCol - 1);
                } else {
                    break;
                }
            } else if (command.equals("right")) {
                //col++
                if (!isOutOfBounds(startRow, startCol + 1, matrix)) {
                    movePerson(matrix, startRow, startCol, startRow, startCol + 1);
                } else {
                    break;
                }
            }

        }
        if (collectedMoney >= 50) {
            System.out.println("Good news! You succeeded in collecting enough money!");
        } else {
            System.out.println("Bad news, you are out of the bakery.");
            matrix[startRow][startCol] = '-';
        }
        System.out.printf("Money: %d%n", collectedMoney);

        printMatrix(matrix);
    }

    private static void movePerson(char[][] matrix, int oldRow, int oldCol, int newRow, int newCol) {
        matrix[oldRow][oldCol] = '-';
        if (matrix[newRow][newCol] == '-') {
            matrix[newRow][newCol] = 'S';
            startRow = newRow;
            startCol = newCol;
        } else if (matrix[newRow][newCol] == 'O') {
            matrix[newRow][newCol] = '-';
            for (int row = 0; row < matrix.length; row++) {
                for (int col = 0; col < matrix[row].length; col++) {
                    if (matrix[row][col] == 'O') {
                        matrix[row][col] = 'S';
                        startRow = row;
                        startCol = col;
                    }
                }
            }
        } else if (Character.isDigit(matrix[newRow][newCol])) {
            int currentMoney = Integer.parseInt(String.valueOf(matrix[newRow][newCol]));
            matrix[newRow][newCol] = 'S';
            startRow = newRow;
            startCol = newCol;
            collectedMoney += currentMoney;
        }
    }

    private static boolean isOutOfBounds(int newRow, int newCol, char[][] matrix) {
        boolean isOut = true;
        if (newRow >= 0 && newRow < matrix.length && newCol >= 0 && newCol < matrix[newRow].length) {
            isOut = false;
        }
        return isOut;
    }

    public static void printMatrix(char[][] matrix) {
        for (int row = 0; row < matrix.length; row++) {
            for (int col = 0; col < matrix[row].length; col++) {
                System.out.print(matrix[row][col]);
            }
            System.out.println();
        }
    }
}
