package Ex6PokemonTrainer;

import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String input = scanner.nextLine();
        Map<String,Trainer> allTrainers = new LinkedHashMap<>();

        while(!input.equals("Tournament")){
            String[] tokens = input.split("\\s+");
            String nameTrainer = tokens[0];
            String namePokemon = tokens[1];
            String element = tokens[2];
            int health = Integer.parseInt(tokens[3]);
            Pokemon pokemon = new Pokemon(namePokemon,element,health);
            Trainer trainer = new Trainer(nameTrainer,0,new ArrayList<>());

            allTrainers.putIfAbsent(nameTrainer,trainer);
            allTrainers.get(nameTrainer).getAllPokemons().add(pokemon);

            input = scanner.nextLine();
        }
        String command = scanner.nextLine();
        while(!command.equals("End")){
            String element = command;
            for (Trainer trainer : allTrainers.values()) {
                if (trainer.hasTheElement(element)){
                    trainer.setBadges(trainer.getBadges() + 1);
                } else {
                    trainer.subtractHealthFromPokemon();
                    for (int i = 0; i < trainer.getAllPokemons().size(); i++) {
                        if (trainer.getAllPokemons().get(i).getHealth() <= 0) {
                            trainer.getAllPokemons().remove(i);
                            i--;
                        }
                    }
                }
            }
            command = scanner.nextLine();
        }

        allTrainers.entrySet()
                .stream().sorted((f,s) -> {
                    if (f.getValue().getBadges() != s.getValue().getBadges()){
                        return Integer.compare(s.getValue().getBadges(),f.getValue().getBadges());
                    } else {
                        return 0;
                    }
        }).forEach(t -> System.out.println(t.getValue()));
    }
}
